plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.3'

}

group = 'me.typical'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    implementation 'com.zaxxer:HikariCP:5.0.1'  // HikariCP dependency
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
// https://mvnrepository.com/artifact/com.h2database/h2
    implementation 'com.h2database:h2:2.3.232'
    implementation("de.exlll:configlib-yaml:4.5.0")

    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
    compileOnly("io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
shadowJar {
    relocate 'de.exlll.configlib', 'me.typical.offlineclaim.lib.configlib'
    relocate 'org.yaml.engine', 'me.typical.offlineclaim.lib.org.yaml.engine'
    relocate 'org.yaml.smakeyaml', 'me.typical.offlineclaim.lib.org.yaml.snakeyaml'

    dependencies {
        exclude dependency('com.github.Maxlego08:zSchedulers:1.0.7')
    }

}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
